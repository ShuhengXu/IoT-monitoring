{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';// 注册 ChartJS 组件\nimport{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const TemperatureChart=()=>{const[temperatures,setTemperatures]=useState([]);useEffect(()=>{const fetchTemperature=async()=>{try{//const response = await fetch('/api/temperature/current');\nconst response=await fetch(\"http://restapi:5001/api/temperature/current\");const data=await response.json();setTemperatures(prev=>[...prev.slice(-10),data]);// 保留最近10条数据\n}catch(error){console.error('Failed to fetch temperature:',error);}};const interval=setInterval(fetchTemperature,1000);return()=>clearInterval(interval);},[]);const chartData={labels:temperatures.map(t=>t.timestamp),datasets:[{label:'Temperature (°C)',data:temperatures.map(t=>t.value),borderColor:'rgb(75, 192, 192)',tension:0.1}]};const chartOptions={responsive:true,scales:{y:{min:20,max:35}}};return/*#__PURE__*/_jsx(\"div\",{style:{width:'80%',margin:'0 auto'},children:/*#__PURE__*/_jsx(Line,{data:chartData,options:chartOptions})});};export default TemperatureChart;","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsx","_jsx","register","TemperatureChart","temperatures","setTemperatures","fetchTemperature","response","fetch","data","json","prev","slice","error","console","interval","setInterval","clearInterval","chartData","labels","map","t","timestamp","datasets","label","value","borderColor","tension","chartOptions","responsive","scales","y","min","max","style","width","margin","children","options"],"sources":["/Users/xu/project/IoT-monitoring/frontend/src/TemperatureChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\n// 注册 ChartJS 组件\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface TemperatureData {\n  value: number;\n  timestamp: string;\n}\n\nconst TemperatureChart: React.FC = () => {\n  const [temperatures, setTemperatures] = useState<TemperatureData[]>([]);\n\n  useEffect(() => {\n    const fetchTemperature = async () => {\n      try {\n        //const response = await fetch('/api/temperature/current');\n        const response = await fetch(\"http://restapi:5001/api/temperature/current\");\n        const data: TemperatureData = await response.json();\n        setTemperatures(prev => [...prev.slice(-10), data]); // 保留最近10条数据\n      } catch (error) {\n        console.error('Failed to fetch temperature:', error);\n      }\n    };\n\n    const interval = setInterval(fetchTemperature, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const chartData = {\n    labels: temperatures.map(t => t.timestamp),\n    datasets: [{\n      label: 'Temperature (°C)',\n      data: temperatures.map(t => t.value),\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1,\n    }],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      y: {\n        min: 20,\n        max: 35,\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: '80%', margin: '0 auto' }}>\n      <Line data={chartData} options={chartOptions} />\n    </div>\n  );\n};\n\nexport default TemperatureChart;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,iBAAiB,CACtC,OACEC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CAEjB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACAT,OAAO,CAACU,QAAQ,CACdT,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,KAAK,CACLC,OAAO,CACPC,MACF,CAAC,CAOD,KAAM,CAAAI,gBAA0B,CAAGA,CAAA,GAAM,CACvC,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAoB,EAAE,CAAC,CAEvED,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAC3E,KAAM,CAAAC,IAAqB,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CACnDL,eAAe,CAACM,IAAI,EAAI,CAAC,GAAGA,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAEH,IAAI,CAAC,CAAC,CAAE;AACvD,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CAED,KAAM,CAAAE,QAAQ,CAAGC,WAAW,CAACV,gBAAgB,CAAE,IAAI,CAAC,CACpD,MAAO,IAAMW,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,SAAS,CAAG,CAChBC,MAAM,CAAEf,YAAY,CAACgB,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,SAAS,CAAC,CAC1CC,QAAQ,CAAE,CAAC,CACTC,KAAK,CAAE,kBAAkB,CACzBf,IAAI,CAAEL,YAAY,CAACgB,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACI,KAAK,CAAC,CACpCC,WAAW,CAAE,mBAAmB,CAChCC,OAAO,CAAE,GACX,CAAC,CACH,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,CACnBC,UAAU,CAAE,IAAI,CAChBC,MAAM,CAAE,CACNC,CAAC,CAAE,CACDC,GAAG,CAAE,EAAE,CACPC,GAAG,CAAE,EACP,CACF,CACF,CAAC,CAED,mBACEhC,IAAA,QAAKiC,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,QAAS,CAAE,CAAAC,QAAA,cAC7CpC,IAAA,CAACX,IAAI,EAACmB,IAAI,CAAES,SAAU,CAACoB,OAAO,CAAEV,YAAa,CAAE,CAAC,CAC7C,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}